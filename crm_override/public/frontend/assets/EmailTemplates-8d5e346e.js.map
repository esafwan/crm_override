{"version":3,"file":"EmailTemplates-8d5e346e.js","sources":["../../../../frontend/src/components/ListViews/EmailTemplatesListView.vue","../../../../frontend/src/pages/EmailTemplates.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      onRowClick: (row) => emit('showEmailTemplate', row.name),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"sm:mx-5 mx-3\" @columnWidthUpdated=\"emit('columnWidthUpdated')\">\n      <ListHeaderItem\n        v-for=\"column in columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"emit('columnWidthUpdated', column)\"\n      >\n        <Button\n          v-if=\"column.key == '_liked_by'\"\n          variant=\"ghosted\"\n          class=\"!h-4\"\n          :class=\"isLikeFilterApplied ? 'fill-red-500' : 'fill-white'\"\n          @click=\"() => emit('applyLikeFilter')\"\n        >\n          <HeartIcon class=\"h-4 w-4\" />\n        </Button>\n      </ListHeaderItem>\n    </ListHeader>\n    <ListRows class=\"mx-3 sm:mx-5\" id=\"list-rows\">\n      <ListRow\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <ListRowItem :item=\"item\">\n          <!-- <template #prefix>\n\n          </template> -->\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"['modified', 'creation'].includes(column.key)\"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div v-else-if=\"column.key === 'status'\" class=\"truncate text-base\">\n              <Badge\n                :variant=\"'subtle'\"\n                :theme=\"item.color\"\n                size=\"md\"\n                :label=\"item.label\"\n                @click=\"\n                  (event) =>\n                    emit('applyFilter', {\n                      event,\n                      idx,\n                      column,\n                      item,\n                      firstColumn: columns[0],\n                    })\n                \"\n              />\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div v-else-if=\"column.key === '_liked_by'\">\n              <Button\n                v-if=\"column.key == '_liked_by'\"\n                variant=\"ghosted\"\n                :class=\"isLiked(item) ? 'fill-red-500' : 'fill-white'\"\n                @click.stop.prevent=\"\n                  () =>\n                    emit('likeDoc', { name: row.name, liked: isLiked(item) })\n                \"\n              >\n                <HeartIcon class=\"h-4 w-4\" />\n              </Button>\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            >\n              {{ label }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown\n          :options=\"listBulkActionsRef.bulkActions(selections, unselectAll)\"\n        >\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t sm:px-5 px-3 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <ListBulkActions\n    ref=\"listBulkActionsRef\"\n    v-model=\"list\"\n    doctype=\"Email Template\"\n    :options=\"{\n      hideAssign: true,\n    }\"\n  />\n</template>\n<script setup>\nimport HeartIcon from '@/components/Icons/HeartIcon.vue'\nimport ListBulkActions from '@/components/ListBulkActions.vue'\nimport {\n  ListView,\n  ListHeader,\n  ListHeaderItem,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Dropdown,\n  Tooltip,\n} from 'frappe-ui'\nimport { sessionStore } from '@/stores/session'\nimport { ref, computed, watch } from 'vue'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'showEmailTemplate',\n  'columnWidthUpdated',\n  'applyFilter',\n  'applyLikeFilter',\n  'likeDoc',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst isLikeFilterApplied = computed(() => {\n  return list.value.params?.filters?._liked_by ? true : false\n})\n\nconst { user } = sessionStore()\n\nfunction isLiked(item) {\n  if (item) {\n    let likedByMe = JSON.parse(item)\n    return likedByMe.includes(user)\n  }\n}\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst listBulkActionsRef = ref(null)\n\ndefineExpose({\n  customListActions: computed(\n    () => listBulkActionsRef.value?.customListActions\n  ),\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <ViewBreadcrumbs v-model=\"viewControls\" routeName=\"Email Templates\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"emailTemplatesListView?.customListActions\"\n        :actions=\"emailTemplatesListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"() => showEmailTemplate()\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"emailTemplates\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"Email Template\"\n  />\n  <EmailTemplatesListView\n    ref=\"emailTemplatesListView\"\n    v-if=\"emailTemplates.data && rows.length\"\n    v-model=\"emailTemplates.data.page_length_count\"\n    v-model:list=\"emailTemplates\"\n    :rows=\"rows\"\n    :columns=\"emailTemplates.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: emailTemplates.data.row_count,\n      totalCount: emailTemplates.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @showEmailTemplate=\"showEmailTemplate\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @applyLikeFilter=\"(data) => viewControls.applyLikeFilter(data)\"\n    @likeDoc=\"(data) => viewControls.likeDoc(data)\"\n  />\n  <div\n    v-else-if=\"emailTemplates.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <Email2Icon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Email Templates')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"() => showEmailTemplate()\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <EmailTemplateModal\n    v-model=\"showEmailTemplateModal\"\n    v-model:reloadEmailTemplates=\"emailTemplates\"\n    :emailTemplate=\"emailTemplate\"\n  />\n</template>\n\n<script setup>\nimport ViewBreadcrumbs from '@/components/ViewBreadcrumbs.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport Email2Icon from '@/components/Icons/Email2Icon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport EmailTemplatesListView from '@/components/ListViews/EmailTemplatesListView.vue'\nimport EmailTemplateModal from '@/components/Modals/EmailTemplateModal.vue'\nimport { dateFormat, dateTooltipFormat, timeAgo } from '@/utils'\nimport { computed, ref } from 'vue'\n\nconst emailTemplatesListView = ref(null)\n\n// emailTemplates data is loaded in the ViewControls component\nconst emailTemplates = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (\n    !emailTemplates.value?.data?.data ||\n    !['list', 'group_by'].includes(emailTemplates.value.data.view_type)\n  )\n    return []\n  return emailTemplates.value?.data.data.map((emailTemplate) => {\n    let _rows = {}\n    emailTemplates.value?.data.rows.forEach((row) => {\n      _rows[row] = emailTemplate[row]\n\n      if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(emailTemplate[row], dateTooltipFormat),\n          timeAgo: timeAgo(emailTemplate[row]),\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nconst showEmailTemplateModal = ref(false)\n\nconst emailTemplate = ref({})\n\nfunction showEmailTemplate(name) {\n  if (!name) {\n    emailTemplate.value = {\n      subject: '',\n      response: '',\n      response_html: '',\n      name: '',\n      enabled: 1,\n      use_html: 0,\n      owner: '',\n      reference_doctype: 'CRM Deal',\n    }\n  } else {\n    let et = rows.value?.find((row) => row.name === name)\n    emailTemplate.value = {\n      subject: et.subject,\n      response: et.response,\n      response_html: et.response_html,\n      name: et.name,\n      enabled: et.enabled,\n      use_html: et.use_html,\n      owner: et.owner,\n      reference_doctype: et.reference_doctype,\n    }\n  }\n  showEmailTemplateModal.value = true\n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","isLikeFilterApplied","computed","_b","_a","user","sessionStore","isLiked","item","watch","val","old_value","listBulkActionsRef","ref","__expose","emailTemplatesListView","emailTemplates","loadMore","triggerResize","updatedPageCount","viewControls","rows","_c","emailTemplate","_rows","row","dateFormat","dateTooltipFormat","timeAgo","showEmailTemplateModal","showEmailTemplate","name","et"],"mappings":"0mDA0LA,MAAMA,EAAOC,EAUPC,EAAkBC,EAAWC,EAAA,YAAC,EAC9BC,EAAOF,IAAY,MAAM,EAEzBG,EAAsBC,EAAS,IAAM,SACzC,MAAO,IAAAC,GAAAC,EAAAJ,EAAK,MAAM,SAAX,YAAAI,EAAmB,UAAnB,MAAAD,EAA4B,UACrC,CAAC,EAEK,CAAE,KAAAE,CAAM,EAAGC,EAAc,EAE/B,SAASC,EAAQC,EAAM,CACrB,GAAIA,EAEF,OADgB,KAAK,MAAMA,CAAI,EACd,SAASH,CAAI,CAElC,CAEAI,EAAMZ,EAAiB,CAACa,EAAKC,IAAc,CACrCD,IAAQC,GACZhB,EAAK,kBAAmBe,CAAG,CAC7B,CAAC,EAED,MAAME,EAAqBC,EAAI,IAAI,EAEnC,OAAAC,EAAa,CACX,kBAAmBZ,EACjB,IAAM,OAAA,OAAAE,EAAAQ,EAAmB,QAAnB,YAAAR,EAA0B,kBACjC,CACH,CAAC,s7FC/ID,MAAMW,EAAyBF,EAAI,IAAI,EAGjCG,EAAiBH,EAAI,EAAE,EACvBI,EAAWJ,EAAI,CAAC,EAChBK,EAAgBL,EAAI,CAAC,EACrBM,EAAmBN,EAAI,EAAE,EACzBO,EAAeP,EAAI,IAAI,EAEvBQ,EAAOnB,EAAS,IAAM,WAC1B,MACE,GAACC,GAAAC,EAAAY,EAAe,QAAf,YAAAZ,EAAsB,OAAtB,MAAAD,EAA4B,OAC7B,CAAC,CAAC,OAAQ,UAAU,EAAE,SAASa,EAAe,MAAM,KAAK,SAAS,EAE3D,CAAE,GACJM,EAAAN,EAAe,QAAf,YAAAM,EAAsB,KAAK,KAAK,IAAKC,GAAkB,OAC5D,IAAIC,EAAQ,CAAE,EACd,OAAApB,EAAAY,EAAe,QAAf,MAAAZ,EAAsB,KAAK,KAAK,QAASqB,GAAQ,CAC/CD,EAAMC,CAAG,EAAIF,EAAcE,CAAG,EAE1B,CAAC,WAAY,UAAU,EAAE,SAASA,CAAG,IACvCD,EAAMC,CAAG,EAAI,CACX,MAAOC,GAAWH,EAAcE,CAAG,EAAGE,EAAiB,EACvD,QAASC,GAAQL,EAAcE,CAAG,CAAC,CACpC,EAET,GACWD,CACX,EACA,CAAC,EAEKK,EAAyBhB,EAAI,EAAK,EAElCU,EAAgBV,EAAI,EAAE,EAE5B,SAASiB,EAAkBC,EAAM,OAC/B,GAAI,CAACA,EACHR,EAAc,MAAQ,CACpB,QAAS,GACT,SAAU,GACV,cAAe,GACf,KAAM,GACN,QAAS,EACT,SAAU,EACV,MAAO,GACP,kBAAmB,UACpB,MACI,CACL,IAAIS,GAAK5B,EAAAiB,EAAK,QAAL,YAAAjB,EAAY,KAAMqB,GAAQA,EAAI,OAASM,GAChDR,EAAc,MAAQ,CACpB,QAASS,EAAG,QACZ,SAAUA,EAAG,SACb,cAAeA,EAAG,cAClB,KAAMA,EAAG,KACT,QAASA,EAAG,QACZ,SAAUA,EAAG,SACb,MAAOA,EAAG,MACV,kBAAmBA,EAAG,iBACvB,CACF,CACDH,EAAuB,MAAQ,EACjC"}