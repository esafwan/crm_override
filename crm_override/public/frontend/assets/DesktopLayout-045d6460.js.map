{"version":3,"file":"DesktopLayout-045d6460.js","sources":["../../../../frontend/src/components/Icons/CollapseSidebar.vue","../../../../frontend/src/components/Notifications.vue","../../../../frontend/src/components/Layouts/AppSidebar.vue"],"sourcesContent":["<template>\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M10.875 9.06223L3 9.06232\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M6.74537 5.31699L3 9.06236L6.74527 12.8076\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M14.1423 4L14.1423 14.125\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n    />\n  </svg>\n</template>\n","<template>\n  <div\n    v-if=\"notificationsStore().visible\"\n    ref=\"target\"\n    class=\"absolute z-20 h-screen bg-white transition-all duration-300 ease-in-out\"\n    :style=\"{\n      'box-shadow': '8px 0px 8px rgba(0, 0, 0, 0.1)',\n      'max-width': '350px',\n      'min-width': '350px',\n      left: 'calc(100% + 1px)',\n    }\"\n  >\n    <div class=\"flex h-screen flex-col\">\n      <div\n        class=\"z-20 flex items-center justify-between border-b bg-white px-5 py-2.5\"\n      >\n        <div class=\"text-base font-medium\">{{ __('Notifications') }}</div>\n        <div class=\"flex gap-1\">\n          <Tooltip :text=\"__('Mark all as read')\">\n            <div>\n              <Button variant=\"ghost\" @click=\"() => markAllAsRead()\">\n                <template #icon>\n                  <MarkAsDoneIcon class=\"h-4 w-4\" />\n                </template>\n              </Button>\n            </div>\n          </Tooltip>\n          <Tooltip :text=\"__('Close')\">\n            <div>\n              <Button variant=\"ghost\" @click=\"() => toggleNotificationPanel()\">\n                <template #icon>\n                  <FeatherIcon name=\"x\" class=\"h-4 w-4\" />\n                </template>\n              </Button>\n            </div>\n          </Tooltip>\n        </div>\n      </div>\n      <div\n        v-if=\"notificationsStore().allNotifications?.length\"\n        class=\"divide-y overflow-auto text-base\"\n      >\n        <RouterLink\n          v-for=\"n in notificationsStore().allNotifications\"\n          :key=\"n.comment\"\n          :to=\"getRoute(n)\"\n          class=\"flex cursor-pointer items-start gap-2.5 px-4 py-2.5 hover:bg-gray-100\"\n          @click=\"markAsRead(n.comment || n.notification_type_doc)\"\n        >\n          <div class=\"mt-1 flex items-center gap-2.5\">\n            <div\n              class=\"size-[5px] rounded-full\"\n              :class=\"[n.read ? 'bg-transparent' : 'bg-gray-900']\"\n            />\n            <WhatsAppIcon v-if=\"n.type == 'WhatsApp'\" class=\"size-7\" />\n            <UserAvatar v-else :user=\"n.from_user.name\" size=\"lg\" />\n          </div>\n          <div>\n            <div v-if=\"n.notification_text\" v-html=\"n.notification_text\" />\n            <div v-else class=\"mb-2 space-x-1 leading-5 text-gray-600\">\n              <span class=\"font-medium text-gray-900\">\n                {{ n.from_user.full_name }}\n              </span>\n              <span>\n                {{ __('mentioned you in {0}', [n.reference_doctype]) }}\n              </span>\n              <span class=\"font-medium text-gray-900\">\n                {{ n.reference_name }}\n              </span>\n            </div>\n            <div class=\"text-sm text-gray-600\">\n              {{ __(timeAgo(n.creation)) }}\n            </div>\n          </div>\n        </RouterLink>\n      </div>\n      <div\n        v-else\n        class=\"flex flex-1 flex-col items-center justify-center gap-2\"\n      >\n        <NotificationsIcon class=\"h-20 w-20 text-gray-300\" />\n        <div class=\"text-lg font-medium text-gray-500\">\n          {{ __('No new notifications') }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport MarkAsDoneIcon from '@/components/Icons/MarkAsDoneIcon.vue'\nimport NotificationsIcon from '@/components/Icons/NotificationsIcon.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport { notificationsStore } from '@/stores/notifications'\nimport { globalStore } from '@/stores/global'\nimport { timeAgo } from '@/utils'\nimport { onClickOutside } from '@vueuse/core'\nimport { capture } from '@/telemetry'\nimport { Tooltip } from 'frappe-ui'\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\n\nconst { $socket } = globalStore()\n\nconst target = ref(null)\nonClickOutside(\n  target,\n  () => {\n    if (notificationsStore().visible) {\n      toggleNotificationPanel()\n    }\n  },\n  {\n    ignore: ['#notifications-btn'],\n  },\n)\n\nfunction toggleNotificationPanel() {\n  notificationsStore().toggle()\n}\n\nfunction markAsRead(doc) {\n  capture('notification_mark_as_read')\n  notificationsStore().mark_doc_as_read(doc)\n}\n\nfunction markAllAsRead() {\n  capture('notification_mark_all_as_read')\n  notificationsStore().mark_as_read.reload()\n}\n\nonBeforeUnmount(() => {\n  $socket.off('crm_notification')\n})\n\nonMounted(() => {\n  $socket.on('crm_notification', () => {\n    notificationsStore().notifications.reload()\n  })\n})\n\nfunction getRoute(notification) {\n  let params = {\n    leadId: notification.reference_name,\n  }\n  if (notification.route_name === 'Deal') {\n    params = {\n      dealId: notification.reference_name,\n    }\n  }\n  return {\n    name: notification.route_name,\n    params: params,\n    hash: '#' + notification.comment || notification.notification_type_doc,\n  }\n}\n\nonMounted(() => {})\n</script>\n","<template>\n  <div\n    class=\"relative flex h-full flex-col justify-between transition-all duration-300 ease-in-out\"\n    :class=\"isSidebarCollapsed ? 'w-12' : 'w-[220px]'\"\n  >\n    <div>\n      <UserDropdown class=\"p-2\" :isCollapsed=\"isSidebarCollapsed\" />\n    </div>\n    <div class=\"flex-1 overflow-y-auto\">\n      <div class=\"mb-3 flex flex-col\">\n        <SidebarLink\n          id=\"notifications-btn\"\n          :label=\"__('Notifications')\"\n          :icon=\"NotificationsIcon\"\n          :isCollapsed=\"isSidebarCollapsed\"\n          @click=\"() => toggleNotificationPanel()\"\n          class=\"relative mx-2 my-0.5\"\n        >\n          <template #right>\n            <Badge\n              v-if=\"\n                !isSidebarCollapsed &&\n                notificationsStore().unreadNotificationsCount\n              \"\n              :label=\"notificationsStore().unreadNotificationsCount\"\n              variant=\"subtle\"\n            />\n            <div\n              v-else-if=\"notificationsStore().unreadNotificationsCount\"\n              class=\"absolute -left-1.5 top-1 z-20 h-[5px] w-[5px] translate-x-6 translate-y-1 rounded-full bg-gray-800 ring-1 ring-white\"\n            />\n          </template>\n        </SidebarLink>\n      </div>\n      <div v-for=\"view in allViews\" :key=\"view.label\">\n        <div\n          v-if=\"!view.hideLabel && isSidebarCollapsed && view.views?.length\"\n          class=\"mx-2 my-2 h-1 border-b\"\n        />\n        <Section\n          :label=\"view.name\"\n          :hideLabel=\"view.hideLabel\"\n          :isOpened=\"view.opened\"\n        >\n          <template #header=\"{ opened, hide, toggle }\">\n            <div\n              v-if=\"!hide\"\n              class=\"flex cursor-pointer gap-1.5 px-1 text-base font-medium text-gray-600 transition-all duration-300 ease-in-out\"\n              :class=\"\n                isSidebarCollapsed\n                  ? 'ml-0 h-0 overflow-hidden opacity-0'\n                  : 'ml-2 mt-4 h-7 w-auto opacity-100'\n              \"\n              @click=\"toggle()\"\n            >\n              <FeatherIcon\n                name=\"chevron-right\"\n                class=\"h-4 text-gray-900 transition-all duration-300 ease-in-out\"\n                :class=\"{ 'rotate-90': opened }\"\n              />\n              <span>{{ __(view.name) }}</span>\n            </div>\n          </template>\n          <nav class=\"flex flex-col\">\n            <SidebarLink\n              v-for=\"link in view.views\"\n              :icon=\"link.icon\"\n              :label=\"__(link.label)\"\n              :to=\"link.to\"\n              :isCollapsed=\"isSidebarCollapsed\"\n              class=\"mx-2 my-0.5\"\n            />\n          </nav>\n        </Section>\n      </div>\n    </div>\n    <div class=\"m-2 flex flex-col gap-1\">\n      <SidebarLink\n        :label=\"isSidebarCollapsed ? __('Expand') : __('Collapse')\"\n        :isCollapsed=\"isSidebarCollapsed\"\n        @click=\"isSidebarCollapsed = !isSidebarCollapsed\"\n        class=\"\"\n      >\n        <template #icon>\n          <span class=\"grid h-4.5 w-4.5 flex-shrink-0 place-items-center\">\n            <CollapseSidebar\n              class=\"h-4.5 w-4.5 text-gray-700 duration-300 ease-in-out\"\n              :class=\"{ '[transform:rotateY(180deg)]': isSidebarCollapsed }\"\n            />\n          </span>\n        </template>\n      </SidebarLink>\n    </div>\n    <Notifications />\n  </div>\n</template>\n\n<script setup>\nimport Section from '@/components/Section.vue'\nimport Email2Icon from '@/components/Icons/Email2Icon.vue'\nimport PinIcon from '@/components/Icons/PinIcon.vue'\nimport CameraIcon from '@/components/Icons/CameraIcon.vue'\nimport UserDropdown from '@/components/UserDropdown.vue'\nimport LeadsIcon from '@/components/Icons/LeadsIcon.vue'\nimport DealsIcon from '@/components/Icons/DealsIcon.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport CollapseSidebar from '@/components/Icons/CollapseSidebar.vue'\nimport NotificationsIcon from '@/components/Icons/NotificationsIcon.vue'\nimport SidebarLink from '@/components/SidebarLink.vue'\nimport Notifications from '@/components/Notifications.vue'\nimport { viewsStore } from '@/stores/views'\nimport { notificationsStore } from '@/stores/notifications'\nimport { FeatherIcon } from 'frappe-ui'\nimport { useStorage } from '@vueuse/core'\nimport { computed, h } from 'vue'\n\nconst { getPinnedViews, getPublicViews } = viewsStore()\nconst { toggle: toggleNotificationPanel } = notificationsStore()\n\nconst isSidebarCollapsed = useStorage('isSidebarCollapsed', false)\n\nconst links = [\n  {\n    label: 'Leads',\n    icon: LeadsIcon,\n    to: 'Leads',\n  },\n  {\n    label: 'Deals',\n    icon: DealsIcon,\n    to: 'Deals',\n  },\n  {\n    label: 'Contacts',\n    icon: ContactsIcon,\n    to: 'Contacts',\n  },\n  {\n    label: 'Organizations',\n    icon: OrganizationsIcon,\n    to: 'Organizations',\n  },\n  {\n    label: 'Notes',\n    icon: NoteIcon,\n    to: 'Notes',\n  },\n  {\n    label: 'Tasks',\n    icon: TaskIcon,\n    to: 'Tasks',\n  },\n  {\n    label: 'Call Logs',\n    icon: PhoneIcon,\n    to: 'Call Logs',\n  },\n  {\n    label: 'Email Templates',\n    icon: Email2Icon,\n    to: 'Email Templates',\n  },\n  {\n    label: 'Video',\n    icon: CameraIcon,\n    to: 'Video',\n  },\n]\n\nconst allViews = computed(() => {\n  let _views = [\n    {\n      name: 'All Views',\n      hideLabel: true,\n      opened: true,\n      views: links,\n    },\n  ]\n  if (getPublicViews().length) {\n    _views.push({\n      name: 'Public views',\n      opened: true,\n      views: parseView(getPublicViews()),\n    })\n  }\n\n  if (getPinnedViews().length) {\n    _views.push({\n      name: 'Pinned views',\n      opened: true,\n      views: parseView(getPinnedViews()),\n    })\n  }\n  return _views\n})\n\nfunction parseView(views) {\n  return views.map((view) => {\n    return {\n      label: view.label,\n      icon: getIcon(view.route_name, view.icon),\n      to: {\n        name: view.route_name,\n        params: { viewType: view.type || 'list' },\n        query: { view: view.name },\n      },\n    }\n  })\n}\n\nfunction getIcon(routeName, icon) {\n  if (icon) return h('div', { class: 'size-auto' }, icon)\n\n  switch (routeName) {\n    case 'Leads':\n      return LeadsIcon\n    case 'Deals':\n      return DealsIcon\n    case 'Contacts':\n      return ContactsIcon\n    case 'Organizations':\n      return OrganizationsIcon\n    case 'Notes':\n      return NoteIcon\n    case 'Call Logs':\n      return PhoneIcon\n    default:\n      return PinIcon\n  }\n}\n</script>\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","$socket","globalStore","target","ref","onClickOutside","notificationsStore","toggleNotificationPanel","markAsRead","doc","capture","markAllAsRead","onBeforeUnmount","onMounted","getRoute","notification","params","getPinnedViews","getPublicViews","viewsStore","isSidebarCollapsed","useStorage","links","LeadsIcon","DealsIcon","ContactsIcon","OrganizationsIcon","NoteIcon","TaskIcon","PhoneIcon","Email2Icon","CameraIcon","allViews","computed","_views","parseView","views","view","getIcon","routeName","icon","h","PinIcon"],"mappings":"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"}