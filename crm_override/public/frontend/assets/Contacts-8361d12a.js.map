{"version":3,"file":"Contacts-8361d12a.js","sources":["../../../../frontend/src/pages/Contacts.vue"],"sourcesContent":["<template>\n  <LayoutHeader>\n    <template #left-header>\n      <ViewBreadcrumbs v-model=\"viewControls\" routeName=\"Contacts\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"contactsListView?.customListActions\"\n        :actions=\"contactsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showContactModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"contacts\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"Contact\"\n  />\n  <ContactsListView\n    ref=\"contactsListView\"\n    v-if=\"contacts.data && rows.length\"\n    v-model=\"contacts.data.page_length_count\"\n    v-model:list=\"contacts\"\n    :rows=\"rows\"\n    :columns=\"contacts.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: contacts.data.row_count,\n      totalCount: contacts.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @applyLikeFilter=\"(data) => viewControls.applyLikeFilter(data)\"\n    @likeDoc=\"(data) => viewControls.likeDoc(data)\"\n  />\n  <div\n    v-else-if=\"contacts.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <ContactsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Contacts')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showContactModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <ContactModal\n    v-model=\"showContactModal\"\n    v-model:quickEntry=\"showQuickEntryModal\"\n    :contact=\"{}\"\n  />\n  <QuickEntryModal\n    v-if=\"showQuickEntryModal\"\n    v-model=\"showQuickEntryModal\"\n    doctype=\"Contact\"\n  />\n</template>\n\n<script setup>\nimport ViewBreadcrumbs from '@/components/ViewBreadcrumbs.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ContactModal from '@/components/Modals/ContactModal.vue'\nimport QuickEntryModal from '@/components/Settings/QuickEntryModal.vue'\nimport ContactsListView from '@/components/ListViews/ContactsListView.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { organizationsStore } from '@/stores/organizations.js'\nimport { dateFormat, dateTooltipFormat, timeAgo } from '@/utils'\nimport { ref, computed } from 'vue'\n\nconst { getOrganization } = organizationsStore()\n\nconst showContactModal = ref(false)\nconst showQuickEntryModal = ref(false)\n\nconst contactsListView = ref(null)\n\n// contacts data is loaded in the ViewControls component\nconst contacts = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (\n    !contacts.value?.data?.data ||\n    !['list', 'group_by'].includes(contacts.value.data.view_type)\n  )\n    return []\n  return contacts.value?.data.data.map((contact) => {\n    let _rows = {}\n    contacts.value?.data.rows.forEach((row) => {\n      _rows[row] = contact[row]\n\n      if (row == 'full_name') {\n        _rows[row] = {\n          label: contact.full_name,\n          image_label: contact.full_name,\n          image: contact.image,\n        }\n      } else if (row == 'company_name') {\n        _rows[row] = {\n          label: contact.company_name,\n          logo: getOrganization(contact.company_name)?.organization_logo,\n        }\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(contact[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(contact[row])),\n        }\n      }\n    })\n    return _rows\n  })\n})\n</script>\n"],"names":["getOrganization","organizationsStore","showContactModal","ref","showQuickEntryModal","contactsListView","contacts","loadMore","triggerResize","updatedPageCount","viewControls","rows","computed","_b","_a","_c","contact","_rows","row","dateFormat","dateTooltipFormat","timeAgo"],"mappings":"87CAsFA,KAAM,CAAE,gBAAAA,CAAiB,EAAGC,EAAoB,EAE1CC,EAAmBC,EAAI,EAAK,EAC5BC,EAAsBD,EAAI,EAAK,EAE/BE,EAAmBF,EAAI,IAAI,EAG3BG,EAAWH,EAAI,EAAE,EACjBI,EAAWJ,EAAI,CAAC,EAChBK,EAAgBL,EAAI,CAAC,EACrBM,EAAmBN,EAAI,EAAE,EACzBO,EAAeP,EAAI,IAAI,EAEvBQ,EAAOC,EAAS,IAAM,WAC1B,MACE,GAACC,GAAAC,EAAAR,EAAS,QAAT,YAAAQ,EAAgB,OAAhB,MAAAD,EAAsB,OACvB,CAAC,CAAC,OAAQ,UAAU,EAAE,SAASP,EAAS,MAAM,KAAK,SAAS,EAErD,CAAE,GACJS,EAAAT,EAAS,QAAT,YAAAS,EAAgB,KAAK,KAAK,IAAKC,GAAY,OAChD,IAAIC,EAAQ,CAAE,EACd,OAAAH,EAAAR,EAAS,QAAT,MAAAQ,EAAgB,KAAK,KAAK,QAASI,GAAQ,OACzCD,EAAMC,CAAG,EAAIF,EAAQE,CAAG,EAEpBA,GAAO,YACTD,EAAMC,CAAG,EAAI,CACX,MAAOF,EAAQ,UACf,YAAaA,EAAQ,UACrB,MAAOA,EAAQ,KAChB,EACQE,GAAO,eAChBD,EAAMC,CAAG,EAAI,CACX,MAAOF,EAAQ,aACf,MAAMF,EAAAd,EAAgBgB,EAAQ,YAAY,IAApC,YAAAF,EAAuC,iBAC9C,EACQ,CAAC,WAAY,UAAU,EAAE,SAASI,CAAG,IAC9CD,EAAMC,CAAG,EAAI,CACX,MAAOC,EAAWH,EAAQE,CAAG,EAAGE,CAAiB,EACjD,QAAS,GAAGC,EAAQL,EAAQE,CAAG,CAAC,CAAC,CAClC,EAET,GACWD,CACX,EACA,CAAC"}