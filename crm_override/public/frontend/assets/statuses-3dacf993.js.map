{"version":3,"file":"statuses-3dacf993.js","sources":["../../../../frontend/src/components/MultipleAvatar.vue","../../../../frontend/src/stores/statuses.js"],"sourcesContent":["<template>\n  <div\n    v-if=\"avatars?.length\"\n    class=\"mr-1.5 flex cursor-pointer items-center\"\n    :class=\"[\n      avatars?.length > 1 ? 'flex-row-reverse' : 'truncate [&>div]:truncate',\n    ]\"\n  >\n    <Tooltip v-if=\"avatars?.length == 1\" :text=\"avatars[0].name\">\n      <div class=\"flex items-center gap-2 text-base\">\n        <Avatar\n          shape=\"circle\"\n          :image=\"avatars[0].image\"\n          :label=\"avatars[0].label\"\n          :size=\"size\"\n        />\n        <div class=\"truncate\">{{ avatars[0].label }}</div>\n      </div>\n    </Tooltip>\n    <Tooltip\n      v-else\n      :text=\"avatar.name\"\n      v-for=\"avatar in reverseAvatars\"\n      :key=\"avatar.name\"\n    >\n      <Avatar\n        class=\"user-avatar -mr-1.5 transform ring-2 ring-white transition hover:z-10 hover:scale-110\"\n        shape=\"circle\"\n        :image=\"avatar.image\"\n        :label=\"avatar.label\"\n        :size=\"size\"\n        :data-name=\"avatar.name\"\n      />\n    </Tooltip>\n  </div>\n</template>\n<script setup>\nimport { Avatar, Tooltip } from 'frappe-ui'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  avatars: {\n    type: Array,\n    default: [],\n  },\n  size: {\n    type: String,\n    default: 'md',\n  },\n})\nconst reverseAvatars = computed(() => props.avatars.reverse())\n</script>\n","import IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport { capture } from '@/telemetry'\nimport { defineStore } from 'pinia'\nimport { createListResource } from 'frappe-ui'\nimport { reactive, h } from 'vue'\n\nexport const statusesStore = defineStore('crm-statuses', () => {\n  let leadStatusesByName = reactive({})\n  let dealStatusesByName = reactive({})\n  let communicationStatusesByName = reactive({})\n\n  const leadStatuses = createListResource({\n    doctype: 'CRM Lead Status',\n    fields: ['name', 'color', 'position'],\n    orderBy: 'position asc',\n    cache: 'lead-statuses',\n    initialData: [],\n    auto: true,\n    transform(statuses) {\n      for (let status of statuses) {\n        status.colorClass = colorClasses(status.color)\n        status.iconColorClass = colorClasses(status.color, true)\n        leadStatusesByName[status.name] = status\n      }\n      return statuses\n    },\n  })\n\n  const dealStatuses = createListResource({\n    doctype: 'CRM Deal Status',\n    fields: ['name', 'color', 'position'],\n    orderBy: 'position asc',\n    cache: 'deal-statuses',\n    initialData: [],\n    auto: true,\n    transform(statuses) {\n      for (let status of statuses) {\n        status.colorClass = colorClasses(status.color)\n        status.iconColorClass = colorClasses(status.color, true)\n        dealStatusesByName[status.name] = status\n      }\n      return statuses\n    },\n  })\n\n  const communicationStatuses = createListResource({\n    doctype: 'CRM Communication Status',\n    fields: ['name'],\n    cache: 'communication-statuses',\n    initialData: [],\n    auto: true,\n    transform(statuses) {\n      for (let status of statuses) {\n        communicationStatusesByName[status.name] = status\n      }\n      return statuses\n    },\n  })\n\n  function colorClasses(color, onlyIcon = false) {\n    let textColor = `!text-${color}-600`\n    if (color == 'black') {\n      textColor = '!text-gray-900'\n    } else if (['gray', 'green'].includes(color)) {\n      textColor = `!text-${color}-700`\n    }\n\n    let bgColor = `!bg-${color}-100 hover:!bg-${color}-200 active:!bg-${color}-300`\n\n    return [textColor, onlyIcon ? '' : bgColor]\n  }\n\n  function getLeadStatus(name) {\n    if (!name) {\n      name = leadStatuses.data[0].name\n    }\n    return leadStatusesByName[name]\n  }\n\n  function getDealStatus(name) {\n    if (!name) {\n      name = dealStatuses.data[0].name\n    }\n    return dealStatusesByName[name]\n  }\n\n  function getCommunicationStatus(name) {\n    if (!name) {\n      name = communicationStatuses.data[0].name\n    }\n    return communicationStatuses[name]\n  }\n\n  function statusOptions(doctype, action, statuses = []) {\n    let statusesByName =\n      doctype == 'deal' ? dealStatusesByName : leadStatusesByName\n\n    if (statuses.length) {\n      statusesByName = statuses.reduce((acc, status) => {\n        acc[status] = statusesByName[status]\n        return acc\n      }, {})\n    }\n\n    let options = []\n    for (const status in statusesByName) {\n      options.push({\n        label: statusesByName[status].name,\n        value: statusesByName[status].name,\n        icon: () =>\n          h(IndicatorIcon, {\n            class: statusesByName[status].iconColorClass,\n          }),\n        onClick: () => {\n          capture('status_changed', { doctype, status })\n          action && action('status', statusesByName[status].name)\n        },\n      })\n    }\n    return options\n  }\n\n  return {\n    leadStatuses,\n    dealStatuses,\n    communicationStatuses,\n    getLeadStatus,\n    getDealStatus,\n    getCommunicationStatus,\n    statusOptions,\n  }\n})\n"],"names":["props","__props","reverseAvatars","computed","statusesStore","defineStore","leadStatusesByName","reactive","dealStatusesByName","communicationStatusesByName","leadStatuses","createListResource","statuses","status","colorClasses","dealStatuses","communicationStatuses","color","onlyIcon","textColor","bgColor","getLeadStatus","name","getDealStatus","getCommunicationStatus","statusOptions","doctype","action","statusesByName","acc","options","h","IndicatorIcon","capture"],"mappings":"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"}