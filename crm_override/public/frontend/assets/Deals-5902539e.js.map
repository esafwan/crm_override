{"version":3,"file":"Deals-5902539e.js","sources":["../../../../frontend/src/components/Modals/DealModal.vue","../../../../frontend/src/pages/Deals.vue"],"sourcesContent":["<template>\n  <Dialog v-model=\"show\" :options=\"{ size: '3xl' }\">\n    <template #body>\n      <div class=\"bg-white px-4 pb-6 pt-5 sm:px-6\">\n        <div class=\"mb-5 flex items-center justify-between\">\n          <div>\n            <h3 class=\"text-2xl font-semibold leading-6 text-gray-900\">\n              {{ __('Create Deal') }}\n            </h3>\n          </div>\n          <div class=\"flex items-center gap-1\">\n            <Button\n              v-if=\"isManager()\"\n              variant=\"ghost\"\n              class=\"w-7\"\n              @click=\"openQuickEntryModal\"\n            >\n              <EditIcon class=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"ghost\" class=\"w-7\" @click=\"show = false\">\n              <FeatherIcon name=\"x\" class=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n        <div>\n          <div class=\"mb-4 grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div class=\"flex items-center gap-3 text-sm text-gray-600\">\n              <div>{{ __('Choose Existing Organization') }}</div>\n              <Switch v-model=\"chooseExistingOrganization\" />\n            </div>\n            <div class=\"flex items-center gap-3 text-sm text-gray-600\">\n              <div>{{ __('Choose Existing Contact') }}</div>\n              <Switch v-model=\"chooseExistingContact\" />\n            </div>\n          </div>\n          <Fields\n            v-if=\"filteredSections\"\n            class=\"border-t pt-4\"\n            :sections=\"filteredSections\"\n            :data=\"deal\"\n          />\n          <ErrorMessage class=\"mt-4\" v-if=\"error\" :message=\"__(error)\" />\n        </div>\n      </div>\n      <div class=\"px-4 pb-7 pt-4 sm:px-6\">\n        <div class=\"flex flex-row-reverse gap-2\">\n          <Button\n            variant=\"solid\"\n            :label=\"__('Create')\"\n            :loading=\"isDealCreating\"\n            @click=\"createDeal\"\n          />\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport Fields from '@/components/Fields.vue'\nimport { usersStore } from '@/stores/users'\nimport { statusesStore } from '@/stores/statuses'\nimport { capture } from '@/telemetry'\nimport { Switch, createResource } from 'frappe-ui'\nimport { computed, ref, reactive, onMounted, nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  defaults: Object,\n})\n\nconst { getUser, isManager } = usersStore()\nconst { getDealStatus, statusOptions } = statusesStore()\n\nconst show = defineModel()\nconst router = useRouter()\nconst error = ref(null)\n\nconst deal = reactive({\n  organization: '',\n  organization_name: '',\n  website: '',\n  no_of_employees: '',\n  territory: '',\n  annual_revenue: '',\n  industry: '',\n  contact: '',\n  salutation: '',\n  first_name: '',\n  last_name: '',\n  email: '',\n  mobile_no: '',\n  gender: '',\n  status: '',\n  deal_owner: '',\n})\n\nconst isDealCreating = ref(false)\nconst chooseExistingContact = ref(false)\nconst chooseExistingOrganization = ref(false)\n\nconst sections = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_fields_layout',\n  cache: ['quickEntryFields', 'CRM Deal'],\n  params: { doctype: 'CRM Deal', type: 'Quick Entry' },\n  auto: true,\n  transform: (data) => {\n    return data.forEach((section) => {\n      section.fields.forEach((field) => {\n        if (field.name == 'status') {\n          field.type = 'Select'\n          field.options = dealStatuses.value\n          field.prefix = getDealStatus(deal.status).iconColorClass\n        } else if (field.name == 'deal_owner') {\n          field.type = 'User'\n        }\n      })\n    })\n  },\n})\n\nconst filteredSections = computed(() => {\n  let allSections = sections.data || []\n  if (!allSections.length) return []\n\n  let _filteredSections = []\n\n  if (chooseExistingOrganization.value) {\n    _filteredSections.push(\n      allSections.find((s) => s.label === 'Select Organization'),\n    )\n  } else {\n    _filteredSections.push(\n      allSections.find((s) => s.label === 'Organization Details'),\n    )\n  }\n\n  if (chooseExistingContact.value) {\n    _filteredSections.push(\n      allSections.find((s) => s.label === 'Select Contact'),\n    )\n  } else {\n    _filteredSections.push(\n      allSections.find((s) => s.label === 'Contact Details'),\n    )\n  }\n\n  allSections.forEach((s) => {\n    if (\n      ![\n        'Select Organization',\n        'Organization Details',\n        'Select Contact',\n        'Contact Details',\n      ].includes(s.label)\n    ) {\n      _filteredSections.push(s)\n    }\n  })\n\n  return _filteredSections\n})\n\nconst dealStatuses = computed(() => {\n  let statuses = statusOptions('deal')\n  if (!deal.status) {\n    deal.status = statuses[0].value\n  }\n  return statuses\n})\n\nfunction createDeal() {\n  if (deal.website && !deal.website.startsWith('http')) {\n    deal.website = 'https://' + deal.website\n  }\n  createResource({\n    url: 'crm.fcrm.doctype.crm_deal.crm_deal.create_deal',\n    params: { args: deal },\n    auto: true,\n    validate() {\n      error.value = null\n      if (deal.annual_revenue) {\n        deal.annual_revenue = deal.annual_revenue.replace(/,/g, '')\n        if (isNaN(deal.annual_revenue)) {\n          error.value = __('Annual Revenue should be a number')\n          return error.value\n        }\n      }\n      if (deal.mobile_no && isNaN(deal.mobile_no.replace(/[-+() ]/g, ''))) {\n        error.value = __('Mobile No should be a number')\n        return error.value\n      }\n      if (deal.email && !deal.email.includes('@')) {\n        error.value = __('Invalid Email')\n        return error.value\n      }\n      if (!deal.status) {\n        error.value = __('Status is required')\n        return error.value\n      }\n      isDealCreating.value = true\n    },\n    onSuccess(name) {\n      capture('deal_created')\n      isDealCreating.value = false\n      show.value = false\n      router.push({ name: 'Deal', params: { dealId: name } })\n    },\n    onError(err) {\n      isDealCreating.value = false\n      if (!err.messages) {\n        error.value = err.message\n        return\n      }\n      error.value = err.messages.join('\\n')\n    },\n  })\n}\n\nconst showQuickEntryModal = defineModel('quickEntry')\n\nfunction openQuickEntryModal() {\n  showQuickEntryModal.value = true\n  nextTick(() => {\n    show.value = false\n  })\n}\n\nonMounted(() => {\n  Object.assign(deal, props.defaults)\n  if (!deal.deal_owner) {\n    deal.deal_owner = getUser().name\n  }\n  if (!deal.status && dealStatuses.value[0].value) {\n    deal.status = dealStatuses.value[0].value\n  }\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <ViewBreadcrumbs v-model=\"viewControls\" routeName=\"Deals\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"dealsListView?.customListActions\"\n        :actions=\"dealsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showDealModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"deals\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Deal\"\n    :options=\"{\n      allowedViews: ['list', 'group_by', 'kanban'],\n    }\"\n  />\n  <KanbanView\n    v-if=\"route.params.viewType == 'kanban'\"\n    v-model=\"deals\"\n    :options=\"{\n      getRoute: (row) => ({\n        name: 'Deal',\n        params: { dealId: row.name },\n        query: { view: route.query.view, viewType: route.params.viewType },\n      }),\n      onNewClick: (column) => onNewClick(column),\n    }\"\n    @update=\"(data) => viewControls.updateKanbanSettings(data)\"\n    @loadMore=\"(columnName) => viewControls.loadMoreKanban(columnName)\"\n  >\n    <template #title=\"{ titleField, itemName }\">\n      <div class=\"flex gap-2 items-center\">\n        <div v-if=\"titleField === 'status'\">\n          <IndicatorIcon :class=\"getRow(itemName, titleField).color\" />\n        </div>\n        <div\n          v-else-if=\"\n            titleField === 'organization' && getRow(itemName, titleField).label\n          \"\n        >\n          <Avatar\n            class=\"flex items-center\"\n            :image=\"getRow(itemName, titleField).logo\"\n            :label=\"getRow(itemName, titleField).label\"\n            size=\"sm\"\n          />\n        </div>\n        <div\n          v-else-if=\"\n            titleField === 'deal_owner' &&\n            getRow(itemName, titleField).full_name\n          \"\n        >\n          <Avatar\n            class=\"flex items-center\"\n            :image=\"getRow(itemName, titleField).user_image\"\n            :label=\"getRow(itemName, titleField).full_name\"\n            size=\"sm\"\n          />\n        </div>\n        <div\n          v-if=\"\n            [\n              'modified',\n              'creation',\n              'first_response_time',\n              'first_responded_on',\n              'response_by',\n            ].includes(titleField)\n          \"\n          class=\"truncate text-base\"\n        >\n          <Tooltip :text=\"getRow(itemName, titleField).label\">\n            <div>{{ getRow(itemName, titleField).timeAgo }}</div>\n          </Tooltip>\n        </div>\n        <div v-else-if=\"titleField === 'sla_status'\" class=\"truncate text-base\">\n          <Badge\n            v-if=\"getRow(itemName, titleField).value\"\n            :variant=\"'subtle'\"\n            :theme=\"getRow(itemName, titleField).color\"\n            size=\"md\"\n            :label=\"getRow(itemName, titleField).value\"\n          />\n        </div>\n        <div\n          v-else-if=\"getRow(itemName, titleField).label\"\n          class=\"truncate text-base\"\n        >\n          {{ getRow(itemName, titleField).label }}\n        </div>\n        <div class=\"text-gray-500\" v-else>{{ __('No Title') }}</div>\n      </div>\n    </template>\n\n    <template #fields=\"{ fieldName, itemName }\">\n      <div\n        v-if=\"getRow(itemName, fieldName).label\"\n        class=\"truncate flex items-center gap-2\"\n      >\n        <div v-if=\"fieldName === 'status'\">\n          <IndicatorIcon :class=\"getRow(itemName, fieldName).color\" />\n        </div>\n        <div v-else-if=\"fieldName === 'organization'\">\n          <Avatar\n            v-if=\"getRow(itemName, fieldName).label\"\n            class=\"flex items-center\"\n            :image=\"getRow(itemName, fieldName).logo\"\n            :label=\"getRow(itemName, fieldName).label\"\n            size=\"xs\"\n          />\n        </div>\n        <div v-else-if=\"fieldName === 'deal_owner'\">\n          <Avatar\n            v-if=\"getRow(itemName, fieldName).full_name\"\n            class=\"flex items-center\"\n            :image=\"getRow(itemName, fieldName).user_image\"\n            :label=\"getRow(itemName, fieldName).full_name\"\n            size=\"xs\"\n          />\n        </div>\n        <div\n          v-if=\"\n            [\n              'modified',\n              'creation',\n              'first_response_time',\n              'first_responded_on',\n              'response_by',\n            ].includes(fieldName)\n          \"\n          class=\"truncate text-base\"\n        >\n          <Tooltip :text=\"getRow(itemName, fieldName).label\">\n            <div>{{ getRow(itemName, fieldName).timeAgo }}</div>\n          </Tooltip>\n        </div>\n        <div v-else-if=\"fieldName === 'sla_status'\" class=\"truncate text-base\">\n          <Badge\n            v-if=\"getRow(itemName, fieldName).value\"\n            :variant=\"'subtle'\"\n            :theme=\"getRow(itemName, fieldName).color\"\n            size=\"md\"\n            :label=\"getRow(itemName, fieldName).value\"\n          />\n        </div>\n        <div v-else-if=\"fieldName === '_assign'\" class=\"flex items-center\">\n          <MultipleAvatar\n            :avatars=\"getRow(itemName, fieldName).label\"\n            size=\"xs\"\n          />\n        </div>\n        <div v-else class=\"truncate text-base\">\n          {{ getRow(itemName, fieldName).label }}\n        </div>\n      </div>\n    </template>\n\n    <template #actions=\"{ itemName }\">\n      <div class=\"flex gap-2 items-center justify-between\">\n        <div class=\"text-gray-600 flex items-center gap-1.5\">\n          <EmailAtIcon class=\"h-4 w-4\" />\n          <span v-if=\"getRow(itemName, '_email_count').label\">\n            {{ getRow(itemName, '_email_count').label }}\n          </span>\n          <span class=\"text-3xl leading-[0]\"> &middot; </span>\n          <NoteIcon class=\"h-4 w-4\" />\n          <span v-if=\"getRow(itemName, '_note_count').label\">\n            {{ getRow(itemName, '_note_count').label }}\n          </span>\n          <span class=\"text-3xl leading-[0]\"> &middot; </span>\n          <TaskIcon class=\"h-4 w-4\" />\n          <span v-if=\"getRow(itemName, '_task_count').label\">\n            {{ getRow(itemName, '_task_count').label }}\n          </span>\n          <span class=\"text-3xl leading-[0]\"> &middot; </span>\n          <CommentIcon class=\"h-4 w-4\" />\n          <span v-if=\"getRow(itemName, '_comment_count').label\">\n            {{ getRow(itemName, '_comment_count').label }}\n          </span>\n        </div>\n        <Dropdown\n          class=\"flex items-center gap-2\"\n          :options=\"actions(itemName)\"\n          variant=\"ghost\"\n          @click.stop.prevent\n        >\n          <Button icon=\"plus\" variant=\"ghost\" />\n        </Dropdown>\n      </div>\n    </template>\n  </KanbanView>\n  <DealsListView\n    ref=\"dealsListView\"\n    v-else-if=\"deals.data && rows.length\"\n    v-model=\"deals.data.page_length_count\"\n    v-model:list=\"deals\"\n    :rows=\"rows\"\n    :columns=\"deals.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: deals.data.row_count,\n      totalCount: deals.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @applyLikeFilter=\"(data) => viewControls.applyLikeFilter(data)\"\n    @likeDoc=\"(data) => viewControls.likeDoc(data)\"\n  />\n  <div v-else-if=\"deals.data\" class=\"flex h-full items-center justify-center\">\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <DealsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Deals')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showDealModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <DealModal\n    v-if=\"showDealModal\"\n    v-model=\"showDealModal\"\n    v-model:quickEntry=\"showQuickEntryModal\"\n    :defaults=\"defaults\"\n  />\n  <NoteModal\n    v-if=\"showNoteModal\"\n    v-model=\"showNoteModal\"\n    :note=\"note\"\n    doctype=\"CRM Deal\"\n    :doc=\"docname\"\n  />\n  <TaskModal\n    v-if=\"showTaskModal\"\n    v-model=\"showTaskModal\"\n    :task=\"task\"\n    doctype=\"CRM Deal\"\n    :doc=\"docname\"\n  />\n  <QuickEntryModal\n    v-if=\"showQuickEntryModal\"\n    v-model=\"showQuickEntryModal\"\n    doctype=\"CRM Deal\"\n  />\n</template>\n\n<script setup>\nimport ViewBreadcrumbs from '@/components/ViewBreadcrumbs.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport EmailAtIcon from '@/components/Icons/EmailAtIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport DealsIcon from '@/components/Icons/DealsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport DealsListView from '@/components/ListViews/DealsListView.vue'\nimport KanbanView from '@/components/Kanban/KanbanView.vue'\nimport DealModal from '@/components/Modals/DealModal.vue'\nimport NoteModal from '@/components/Modals/NoteModal.vue'\nimport TaskModal from '@/components/Modals/TaskModal.vue'\nimport QuickEntryModal from '@/components/Settings/QuickEntryModal.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { globalStore } from '@/stores/global'\nimport { usersStore } from '@/stores/users'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport { callEnabled } from '@/composables/settings'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatNumberIntoCurrency,\n  formatTime,\n} from '@/utils'\nimport { Tooltip, Avatar, Dropdown } from 'frappe-ui'\nimport { useRoute } from 'vue-router'\nimport { ref, reactive, computed, h } from 'vue'\n\nconst { makeCall } = globalStore()\nconst { getUser } = usersStore()\nconst { getOrganization } = organizationsStore()\nconst { getDealStatus } = statusesStore()\n\nconst route = useRoute()\n\nconst dealsListView = ref(null)\nconst showDealModal = ref(false)\nconst showQuickEntryModal = ref(false)\n\nconst defaults = reactive({})\n\n// deals data is loaded in the ViewControls component\nconst deals = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nfunction getRow(name, field) {\n  function getValue(value) {\n    if (value && typeof value === 'object' && !Array.isArray(value)) {\n      return value\n    }\n    return { label: value }\n  }\n  return getValue(rows.value?.find((row) => row.name == name)[field])\n}\n\n// Rows\nconst rows = computed(() => {\n  if (!deals.value?.data?.data) return []\n  if (deals.value.data.view_type === 'group_by') {\n    if (!deals.value?.data.group_by_field?.name) return []\n    return getGroupedByRows(\n      deals.value?.data.data,\n      deals.value?.data.group_by_field,\n    )\n  } else if (deals.value.data.view_type === 'kanban') {\n    return getKanbanRows(deals.value.data.data)\n  } else {\n    return parseRows(deals.value?.data.data)\n  }\n})\n\nfunction getGroupedByRows(listRows, groupByField) {\n  let groupedRows = []\n\n  groupByField.options?.forEach((option) => {\n    let filteredRows = []\n\n    if (!option) {\n      filteredRows = listRows.filter((row) => !row[groupByField.name])\n    } else {\n      filteredRows = listRows.filter((row) => row[groupByField.name] == option)\n    }\n\n    let groupDetail = {\n      label: groupByField.label,\n      group: option || __(' '),\n      collapsed: false,\n      rows: parseRows(filteredRows),\n    }\n    if (groupByField.name == 'status') {\n      groupDetail.icon = () =>\n        h(IndicatorIcon, {\n          class: getDealStatus(option)?.iconColorClass,\n        })\n    }\n    groupedRows.push(groupDetail)\n  })\n\n  return groupedRows || listRows\n}\n\nfunction getKanbanRows(data) {\n  let _rows = []\n  data.forEach((column) => {\n    column.data?.forEach((row) => {\n      _rows.push(row)\n    })\n  })\n  return parseRows(_rows)\n}\n\nfunction parseRows(rows) {\n  return rows.map((deal) => {\n    let _rows = {}\n    deals.value.data.rows.forEach((row) => {\n      _rows[row] = deal[row]\n\n      if (row == 'organization') {\n        _rows[row] = {\n          label: deal.organization,\n          logo: getOrganization(deal.organization)?.organization_logo,\n        }\n      } else if (row == 'annual_revenue') {\n        _rows[row] = formatNumberIntoCurrency(\n          deal.annual_revenue,\n          deal.currency,\n        )\n      } else if (row == 'status') {\n        _rows[row] = {\n          label: deal.status,\n          color: getDealStatus(deal.status)?.iconColorClass,\n        }\n      } else if (row == 'sla_status') {\n        let value = deal.sla_status\n        let tooltipText = value\n        let color =\n          deal.sla_status == 'Failed'\n            ? 'red'\n            : deal.sla_status == 'Fulfilled'\n              ? 'green'\n              : 'orange'\n        if (value == 'First Response Due') {\n          value = __(timeAgo(deal.response_by))\n          tooltipText = dateFormat(deal.response_by, dateTooltipFormat)\n          if (new Date(deal.response_by) < new Date()) {\n            color = 'red'\n          }\n        }\n        _rows[row] = {\n          label: tooltipText,\n          value: value,\n          color: color,\n        }\n      } else if (row == 'deal_owner') {\n        _rows[row] = {\n          label: deal.deal_owner && getUser(deal.deal_owner).full_name,\n          ...(deal.deal_owner && getUser(deal.deal_owner)),\n        }\n      } else if (row == '_assign') {\n        let assignees = JSON.parse(deal._assign) || []\n        if (!assignees.length && deal.deal_owner) {\n          assignees = [deal.deal_owner]\n        }\n        _rows[row] = assignees.map((user) => ({\n          name: user,\n          image: getUser(user).user_image,\n          label: getUser(user).full_name,\n        }))\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(deal[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(deal[row])),\n        }\n      } else if (\n        ['first_response_time', 'first_responded_on', 'response_by'].includes(\n          row,\n        )\n      ) {\n        let field = row == 'response_by' ? 'response_by' : 'first_responded_on'\n        _rows[row] = {\n          label: deal[field] ? dateFormat(deal[field], dateTooltipFormat) : '',\n          timeAgo: deal[row]\n            ? row == 'first_response_time'\n              ? formatTime(deal[row])\n              : __(timeAgo(deal[row]))\n            : '',\n        }\n      }\n    })\n    _rows['_email_count'] = deal._email_count\n    _rows['_note_count'] = deal._note_count\n    _rows['_task_count'] = deal._task_count\n    _rows['_comment_count'] = deal._comment_count\n    return _rows\n  })\n}\n\nfunction onNewClick(column) {\n  let column_field = deals.value.params.column_field\n\n  if (column_field) {\n    defaults[column_field] = column.column.name\n  }\n\n  showDealModal.value = true\n}\n\nfunction actions(itemName) {\n  let mobile_no = getRow(itemName, 'mobile_no')?.label || ''\n  let actions = [\n    {\n      icon: h(PhoneIcon, { class: 'h-4 w-4' }),\n      label: __('Make a Call'),\n      onClick: () => makeCall(mobile_no),\n      condition: () => mobile_no && callEnabled.value,\n    },\n    {\n      icon: h(NoteIcon, { class: 'h-4 w-4' }),\n      label: __('New Note'),\n      onClick: () => showNote(itemName),\n    },\n    {\n      icon: h(TaskIcon, { class: 'h-4 w-4' }),\n      label: __('New Task'),\n      onClick: () => showTask(itemName),\n    },\n  ]\n  return actions.filter((action) =>\n    action.condition ? action.condition() : true,\n  )\n}\n\nconst docname = ref('')\nconst showNoteModal = ref(false)\nconst note = ref({\n  title: '',\n  content: '',\n})\n\nfunction showNote(name) {\n  docname.value = name\n  showNoteModal.value = true\n}\n\nconst showTaskModal = ref(false)\nconst task = ref({\n  title: '',\n  description: '',\n  assigned_to: '',\n  due_date: '',\n  priority: 'Low',\n  status: 'Backlog',\n})\n\nfunction showTask(name) {\n  docname.value = name\n  showTaskModal.value = true\n}\n</script>\n"],"names":["props","__props","getUser","isManager","usersStore","getDealStatus","statusOptions","statusesStore","show","_useModel","router","useRouter","error","ref","deal","reactive","isDealCreating","chooseExistingContact","chooseExistingOrganization","sections","createResource","data","section","field","dealStatuses","filteredSections","computed","allSections","_filteredSections","s","statuses","createDeal","name","capture","err","showQuickEntryModal","openQuickEntryModal","nextTick","onMounted","makeCall","globalStore","getOrganization","organizationsStore","route","useRoute","dealsListView","showDealModal","defaults","deals","loadMore","triggerResize","updatedPageCount","viewControls","getRow","getValue","value","_a","rows","row","_b","_d","_c","getGroupedByRows","_e","_f","getKanbanRows","parseRows","_g","listRows","groupByField","groupedRows","option","filteredRows","groupDetail","h","IndicatorIcon","_rows","column","formatNumberIntoCurrency","tooltipText","color","timeAgo","dateFormat","dateTooltipFormat","assignees","user","formatTime","onNewClick","column_field","actions","itemName","mobile_no","PhoneIcon","callEnabled","NoteIcon","showNote","TaskIcon","showTask","action","docname","showNoteModal","note","showTaskModal","task"],"mappings":"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"}