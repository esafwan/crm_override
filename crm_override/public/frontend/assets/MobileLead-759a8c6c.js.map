{"version":3,"file":"MobileLead-759a8c6c.js","sources":["../../../../frontend/src/pages/MobileLead.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"lead.data\">\n    <header\n      class=\"relative flex h-12 items-center justify-between gap-2 py-2.5 pl-5\"\n    >\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n      <div class=\"absolute right-0\">\n        <Dropdown\n          :options=\"\n            statusOptions('lead', updateField, lead.data._customStatuses)\n          \"\n        >\n          <template #default=\"{ open }\">\n            <Button\n              :label=\"lead.data.status\"\n              :class=\"getLeadStatus(lead.data.status).colorClass\"\n            >\n              <template #prefix>\n                <IndicatorIcon />\n              </template>\n              <template #suffix>\n                <FeatherIcon\n                  :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                  class=\"h-4\"\n                />\n              </template>\n            </Button>\n          </template>\n        </Dropdown>\n      </div>\n    </header>\n  </LayoutHeader>\n  <div\n    v-if=\"lead.data\"\n    class=\"flex h-12 items-center justify-between gap-2 border-b px-3 py-2.5\"\n  >\n    <component :is=\"lead.data._assignedTo?.length == 1 ? 'Button' : 'div'\">\n      <MultipleAvatar\n        :avatars=\"lead.data._assignedTo\"\n        @click=\"showAssignmentModal = true\"\n      />\n    </component>\n    <div class=\"flex items-center gap-2\">\n      <CustomActions\n        v-if=\"lead.data._customActions\"\n        :actions=\"lead.data._customActions\"\n      />\n      <Button\n        :label=\"__('Convert')\"\n        variant=\"solid\"\n        @click=\"showConvertToDealModal = true\"\n      />\n    </div>\n  </div>\n  <div v-if=\"lead?.data\" class=\"flex h-full overflow-hidden\">\n    <Tabs\n      v-model=\"tabIndex\"\n      v-slot=\"{ tab }\"\n      :tabs=\"tabs\"\n      tablistClass=\"!px-3\"\n      class=\"overflow-auto\"\n    >\n      <div v-if=\"tab.name == 'Details'\">\n        <SLASection\n          v-if=\"lead.data.sla_status\"\n          v-model=\"lead.data\"\n          @updateField=\"updateField\"\n        />\n        <div\n          v-if=\"fieldsLayout.data\"\n          class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n        >\n          <div class=\"flex flex-col overflow-y-auto\">\n            <div\n              v-for=\"(section, i) in fieldsLayout.data\"\n              :key=\"section.label\"\n              class=\"flex flex-col px-2 py-3 sm:p-3\"\n              :class=\"{ 'border-b': i !== fieldsLayout.data.length - 1 }\"\n            >\n              <Section :is-opened=\"section.opened\" :label=\"section.label\">\n                <SectionFields\n                  :fields=\"section.fields\"\n                  v-model=\"lead.data\"\n                  @update=\"updateField\"\n                />\n              </Section>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Activities\n        v-else\n        doctype=\"CRM Lead\"\n        :title=\"tab.name\"\n        :tabs=\"tabs\"\n        v-model:reload=\"reload\"\n        v-model:tabIndex=\"tabIndex\"\n        v-model=\"lead\"\n      />\n    </Tabs>\n  </div>\n  <AssignmentModal\n    v-if=\"showAssignmentModal\"\n    v-model=\"showAssignmentModal\"\n    v-model:assignees=\"lead.data._assignedTo\"\n    :doc=\"lead.data\"\n    doctype=\"CRM Lead\"\n  />\n  <Dialog\n    v-model=\"showConvertToDealModal\"\n    :options=\"{\n      title: __('Convert to Deal'),\n      size: 'xl',\n      actions: [\n        {\n          label: __('Convert'),\n          variant: 'solid',\n          onClick: convertToDeal,\n        },\n      ],\n    }\"\n  >\n    <template #body-content>\n      <div class=\"mb-4 flex items-center gap-2 text-gray-600\">\n        <OrganizationsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Organization') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingOrganizationChecked\" />\n        </div>\n        <Link\n          v-if=\"existingOrganizationChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingOrganization\"\n          doctype=\"CRM Organization\"\n          @change=\"(data) => (existingOrganization = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{\n            __(\n              'New organization will be created based on the data in details section',\n            )\n          }}\n        </div>\n      </div>\n\n      <div class=\"mb-4 mt-6 flex items-center gap-2 text-gray-600\">\n        <ContactsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Contact') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingContactChecked\" />\n        </div>\n        <Link\n          v-if=\"existingContactChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingContact\"\n          doctype=\"Contact\"\n          @change=\"(data) => (existingContact = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{ __(\"New contact will be created based on the person's details\") }}\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport Icon from '@/components/Icon.vue'\nimport DetailsIcon from '@/components/Icons/DetailsIcon.vue'\nimport ActivityIcon from '@/components/Icons/ActivityIcon.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport Activities from '@/components/Activities/Activities.vue'\nimport AssignmentModal from '@/components/Modals/AssignmentModal.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport SLASection from '@/components/SLASection.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport {\n  createToast,\n  setupAssignees,\n  setupCustomActions,\n  setupCustomStatuses,\n} from '@/utils'\nimport { getView } from '@/utils/view'\nimport { globalStore } from '@/stores/global'\nimport { contactsStore } from '@/stores/contacts'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport {\n  whatsappEnabled,\n  callEnabled,\n  isMobileView,\n} from '@/composables/settings'\nimport {\n  createResource,\n  Dropdown,\n  Tabs,\n  Switch,\n  Breadcrumbs,\n  call,\n} from 'frappe-ui'\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\n\nconst { $dialog } = globalStore()\nconst { getContactByName, contacts } = contactsStore()\nconst { organizations } = organizationsStore()\nconst { statusOptions, getLeadStatus } = statusesStore()\nconst route = useRoute()\nconst router = useRouter()\n\nconst props = defineProps({\n  leadId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst lead = createResource({\n  url: 'crm.fcrm.doctype.crm_lead.api.get_lead',\n  params: { name: props.leadId },\n  cache: ['lead', props.leadId],\n  onSuccess: (data) => {\n    let obj = {\n      doc: data,\n      $dialog,\n      router,\n      updateField,\n      createToast,\n      deleteDoc: deleteLead,\n      call,\n    }\n    setupAssignees(data)\n    setupCustomStatuses(data, obj)\n    setupCustomActions(data, obj)\n  },\n})\n\nonMounted(() => {\n  if (lead.data) return\n  lead.fetch()\n})\n\nconst reload = ref(false)\nconst showAssignmentModal = ref(false)\n\nfunction updateLead(fieldname, value, callback) {\n  value = Array.isArray(fieldname) ? '' : value\n\n  if (!Array.isArray(fieldname) && validateRequired(fieldname, value)) return\n\n  createResource({\n    url: 'frappe.client.set_value',\n    params: {\n      doctype: 'CRM Lead',\n      name: props.leadId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      lead.reload()\n      reload.value = true\n      createToast({\n        title: __('Lead updated'),\n        icon: 'check',\n        iconClasses: 'text-green-600',\n      })\n      callback?.()\n    },\n    onError: (err) => {\n      createToast({\n        title: __('Error updating lead'),\n        text: __(err.messages?.[0]),\n        icon: 'x',\n        iconClasses: 'text-red-600',\n      })\n    },\n  })\n}\n\nfunction validateRequired(fieldname, value) {\n  let meta = lead.data.fields_meta || {}\n  if (meta[fieldname]?.reqd && !value) {\n    createToast({\n      title: __('Error Updating Lead'),\n      text: __('{0} is a required field', [meta[fieldname].label]),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return true\n  }\n  return false\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Leads'), route: { name: 'Leads' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'CRM Lead')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Leads',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: lead.data.lead_name || __('Untitled'),\n    route: { name: 'Lead', params: { leadId: lead.data.name } },\n  })\n  return items\n})\n\nconst tabIndex = ref(0)\n\nconst tabs = computed(() => {\n  let tabOptions = [\n    {\n      name: 'Details',\n      label: __('Details'),\n      icon: DetailsIcon,\n      condition: () => isMobileView.value,\n    },\n    {\n      name: 'Activity',\n      label: __('Activity'),\n      icon: ActivityIcon,\n    },\n    {\n      name: 'Emails',\n      label: __('Emails'),\n      icon: EmailIcon,\n    },\n    {\n      name: 'Comments',\n      label: __('Comments'),\n      icon: CommentIcon,\n    },\n    {\n      name: 'Calls',\n      label: __('Calls'),\n      icon: PhoneIcon,\n      condition: () => callEnabled.value,\n    },\n    {\n      name: 'Tasks',\n      label: __('Tasks'),\n      icon: TaskIcon,\n    },\n    {\n      name: 'Notes',\n      label: __('Notes'),\n      icon: NoteIcon,\n    },\n    {\n      name: 'WhatsApp',\n      label: __('WhatsApp'),\n      icon: WhatsAppIcon,\n      condition: () => whatsappEnabled.value,\n    },\n  ]\n  return tabOptions.filter((tab) => (tab.condition ? tab.condition() : true))\n})\n\nwatch(tabs, (value) => {\n  if (value && route.params.tabName) {\n    let index = value.findIndex(\n      (tab) => tab.name.toLowerCase() === route.params.tabName.toLowerCase(),\n    )\n    if (index !== -1) {\n      tabIndex.value = index\n    }\n  }\n})\n\nconst fieldsLayout = createResource({\n  url: 'crm.api.doc.get_sidebar_fields',\n  cache: ['fieldsLayout', props.leadId],\n  params: { doctype: 'CRM Lead', name: props.leadId },\n  auto: true,\n})\n\nfunction updateField(name, value, callback) {\n  updateLead(name, value, () => {\n    lead.data[name] = value\n    callback?.()\n  })\n}\n\nasync function deleteLead(name) {\n  await call('frappe.client.delete', {\n    doctype: 'CRM Lead',\n    name,\n  })\n  router.push({ name: 'Leads' })\n}\n\n// Convert to Deal\nconst showConvertToDealModal = ref(false)\nconst existingContactChecked = ref(false)\nconst existingOrganizationChecked = ref(false)\n\nconst existingContact = ref('')\nconst existingOrganization = ref('')\n\nasync function convertToDeal(updated) {\n  let valueUpdated = false\n\n  if (existingContactChecked.value && !existingContact.value) {\n    createToast({\n      title: __('Error'),\n      text: __('Please select an existing contact'),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return\n  }\n\n  if (existingOrganizationChecked.value && !existingOrganization.value) {\n    createToast({\n      title: __('Error'),\n      text: __('Please select an existing organization'),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return\n  }\n\n  if (existingContactChecked.value && existingContact.value) {\n    lead.data.salutation = getContactByName(existingContact.value).salutation\n    lead.data.first_name = getContactByName(existingContact.value).first_name\n    lead.data.last_name = getContactByName(existingContact.value).last_name\n    lead.data.email_id = getContactByName(existingContact.value).email_id\n    lead.data.mobile_no = getContactByName(existingContact.value).mobile_no\n    existingContactChecked.value = false\n    valueUpdated = true\n  }\n\n  if (existingOrganizationChecked.value && existingOrganization.value) {\n    lead.data.organization = existingOrganization.value\n    existingOrganizationChecked.value = false\n    valueUpdated = true\n  }\n\n  if (valueUpdated) {\n    updateLead(\n      {\n        salutation: lead.data.salutation,\n        first_name: lead.data.first_name,\n        last_name: lead.data.last_name,\n        email_id: lead.data.email_id,\n        mobile_no: lead.data.mobile_no,\n        organization: lead.data.organization,\n      },\n      '',\n      () => convertToDeal(true),\n    )\n    showConvertToDealModal.value = false\n  } else {\n    let deal = await call(\n      'crm.fcrm.doctype.crm_lead.crm_lead.convert_to_deal',\n      {\n        lead: lead.data.name,\n      },\n    )\n    if (deal) {\n      if (updated) {\n        await organizations.reload()\n        await contacts.reload()\n      }\n      router.push({ name: 'Deal', params: { dealId: deal } })\n    }\n  }\n}\n</script>\n"],"names":["$dialog","globalStore","getContactByName","contacts","contactsStore","organizations","organizationsStore","statusOptions","getLeadStatus","statusesStore","route","useRoute","router","useRouter","props","__props","lead","createResource","data","obj","updateField","createToast","deleteLead","call","setupAssignees","setupCustomStatuses","setupCustomActions","onMounted","reload","ref","showAssignmentModal","updateLead","fieldname","value","callback","validateRequired","err","_a","meta","breadcrumbs","computed","items","view","getView","tabIndex","tabs","DetailsIcon","isMobileView","ActivityIcon","EmailIcon","CommentIcon","PhoneIcon","callEnabled","TaskIcon","NoteIcon","WhatsAppIcon","whatsappEnabled","tab","watch","index","fieldsLayout","name","showConvertToDealModal","existingContactChecked","existingOrganizationChecked","existingContact","existingOrganization","convertToDeal","updated","valueUpdated","deal"],"mappings":"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"}