{"version":3,"file":"Deal-a4091f56.js","sources":["../../../../frontend/src/pages/Deal.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"deal.data\">\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"deal.data._customActions\"\n        :actions=\"deal.data._customActions\"\n      />\n      <component :is=\"deal.data._assignedTo?.length == 1 ? 'Button' : 'div'\">\n        <MultipleAvatar\n          :avatars=\"deal.data._assignedTo\"\n          @click=\"showAssignmentModal = true\"\n        />\n      </component>\n      <Dropdown\n        :options=\"statusOptions('deal', updateField, deal.data._customStatuses)\"\n      >\n        <template #default=\"{ open }\">\n          <Button\n            :label=\"deal.data.status\"\n            :class=\"getDealStatus(deal.data.status).colorClass\"\n          >\n            <template #prefix>\n              <IndicatorIcon />\n            </template>\n            <template #suffix>\n              <FeatherIcon\n                :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                class=\"h-4\"\n              />\n            </template>\n          </Button>\n        </template>\n      </Dropdown>\n    </template>\n  </LayoutHeader>\n  <div v-if=\"deal.data\" class=\"flex h-full overflow-hidden\">\n    <Tabs v-model=\"tabIndex\" v-slot=\"{ tab }\" :tabs=\"tabs\">\n      <Activities\n        ref=\"activities\"\n        doctype=\"CRM Deal\"\n        :title=\"tab.name\"\n        v-model:reload=\"reload\"\n        v-model:tabIndex=\"tabIndex\"\n        v-model=\"deal\"\n      />\n    </Tabs>\n    <Resizer side=\"right\" class=\"flex flex-col justify-between border-l\">\n      <div\n        class=\"flex h-10.5 cursor-copy items-center border-b px-5 py-2.5 text-lg font-medium\"\n        @click=\"copyToClipboard(deal.data.name)\"\n      >\n        {{ __(deal.data.name) }}\n      </div>\n      <div class=\"flex items-center justify-start gap-5 border-b p-5\">\n        <Tooltip :text=\"__('Organization logo')\">\n          <div class=\"group relative size-12\">\n            <Avatar\n              size=\"3xl\"\n              class=\"size-12\"\n              :label=\"organization?.name || __('Untitled')\"\n              :image=\"organization?.organization_logo\"\n            />\n          </div>\n        </Tooltip>\n        <div class=\"flex flex-col gap-2.5 truncate\">\n          <Tooltip :text=\"organization?.name || __('Set an organization')\">\n            <div class=\"truncate text-2xl font-medium\">\n              {{ organization?.name || __('Untitled') }}\n            </div>\n          </Tooltip>\n          <div class=\"flex gap-1.5\">\n            <Tooltip v-if=\"callEnabled\" :text=\"__('Make a call')\">\n              <Button class=\"h-7 w-7\" @click=\"triggerCall\">\n                <PhoneIcon class=\"h-4 w-4\" />\n              </Button>\n            </Tooltip>\n            <Tooltip :text=\"__('Send an email')\">\n              <Button class=\"h-7 w-7\">\n                <Email2Icon\n                  class=\"h-4 w-4\"\n                  @click=\"\n                    deal.data.email\n                      ? openEmailBox()\n                      : errorMessage(__('No email set'))\n                  \"\n                />\n              </Button>\n            </Tooltip>\n            <Tooltip :text=\"__('Go to website')\">\n              <Button class=\"h-7 w-7\">\n                <LinkIcon\n                  class=\"h-4 w-4\"\n                  @click=\"\n                    deal.data.website\n                      ? openWebsite(deal.data.website)\n                      : errorMessage(__('No website set'))\n                  \"\n                />\n              </Button>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      <SLASection\n        v-if=\"deal.data.sla_status\"\n        v-model=\"deal.data\"\n        @updateField=\"updateField\"\n      />\n      <div\n        v-if=\"fieldsLayout.data\"\n        class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n      >\n        <div class=\"flex flex-col overflow-y-auto\">\n          <div\n            v-for=\"(section, i) in fieldsLayout.data\"\n            :key=\"section.label\"\n            class=\"flex flex-col p-3\"\n            :class=\"{ 'border-b': i !== fieldsLayout.data.length - 1 }\"\n          >\n            <Section :is-opened=\"section.opened\" :label=\"section.label\">\n              <template #actions>\n                <div v-if=\"section.contacts\" class=\"pr-2\">\n                  <Link\n                    value=\"\"\n                    doctype=\"Contact\"\n                    @change=\"(e) => addContact(e)\"\n                    :onCreate=\"\n                      (value, close) => {\n                        _contact = {\n                          first_name: value,\n                          company_name: deal.data.organization,\n                        }\n                        showContactModal = true\n                        close()\n                      }\n                    \"\n                  >\n                    <template #target=\"{ togglePopover }\">\n                      <Button\n                        class=\"h-7 px-3\"\n                        variant=\"ghost\"\n                        icon=\"plus\"\n                        @click=\"togglePopover()\"\n                      />\n                    </template>\n                  </Link>\n                </div>\n                <Button\n                  v-else-if=\"\n                    ((!section.contacts && i == 1) || i == 0) && isManager()\n                  \"\n                  variant=\"ghost\"\n                  class=\"w-7 mr-2\"\n                  @click=\"showSidePanelModal = true\"\n                >\n                  <EditIcon class=\"h-4 w-4\" />\n                </Button>\n              </template>\n              <SectionFields\n                v-if=\"section.fields\"\n                :fields=\"section.fields\"\n                v-model=\"deal.data\"\n                @update=\"updateField\"\n              />\n              <div v-else>\n                <div\n                  v-if=\"\n                    deal_contacts?.loading && deal_contacts?.data?.length == 0\n                  \"\n                  class=\"flex min-h-20 flex-1 items-center justify-center gap-3 text-base text-gray-500\"\n                >\n                  <LoadingIndicator class=\"h-4 w-4\" />\n                  <span>{{ __('Loading...') }}</span>\n                </div>\n                <div\n                  v-else-if=\"deal_contacts?.data?.length\"\n                  v-for=\"(contact, i) in deal_contacts.data\"\n                  :key=\"contact.name\"\n                >\n                  <div\n                    class=\"px-2 pb-2.5\"\n                    :class=\"[i == 0 ? 'pt-5' : 'pt-2.5']\"\n                  >\n                    <Section :is-opened=\"contact.opened\">\n                      <template #header=\"{ opened, toggle }\">\n                        <div\n                          class=\"flex cursor-pointer items-center justify-between gap-2 pr-1 text-base leading-5 text-gray-700\"\n                        >\n                          <div\n                            class=\"flex h-7 items-center gap-2 truncate\"\n                            @click=\"toggle()\"\n                          >\n                            <Avatar\n                              :label=\"contact.full_name\"\n                              :image=\"contact.image\"\n                              size=\"md\"\n                            />\n                            <div class=\"truncate\">\n                              {{ contact.full_name }}\n                            </div>\n                            <Badge\n                              v-if=\"contact.is_primary\"\n                              class=\"ml-2\"\n                              variant=\"outline\"\n                              :label=\"__('Primary')\"\n                              theme=\"green\"\n                            />\n                          </div>\n                          <div class=\"flex items-center\">\n                            <Dropdown :options=\"contactOptions(contact)\">\n                              <Button\n                                icon=\"more-horizontal\"\n                                class=\"text-gray-600\"\n                                variant=\"ghost\"\n                              />\n                            </Dropdown>\n                            <Button\n                              variant=\"ghost\"\n                              @click=\"\n                                router.push({\n                                  name: 'Contact',\n                                  params: { contactId: contact.name },\n                                })\n                              \"\n                            >\n                              <ArrowUpRightIcon class=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" @click=\"toggle()\">\n                              <FeatherIcon\n                                name=\"chevron-right\"\n                                class=\"h-4 w-4 text-gray-900 transition-all duration-300 ease-in-out\"\n                                :class=\"{ 'rotate-90': opened }\"\n                              />\n                            </Button>\n                          </div>\n                        </div>\n                      </template>\n                      <div\n                        class=\"flex flex-col gap-1.5 text-base text-gray-800\"\n                      >\n                        <div class=\"flex items-center gap-3 pb-1.5 pl-1 pt-4\">\n                          <Email2Icon class=\"h-4 w-4\" />\n                          {{ contact.email }}\n                        </div>\n                        <div class=\"flex items-center gap-3 p-1 py-1.5\">\n                          <PhoneIcon class=\"h-4 w-4\" />\n                          {{ contact.mobile_no }}\n                        </div>\n                      </div>\n                    </Section>\n                  </div>\n                  <div\n                    v-if=\"i != deal_contacts.data.length - 1\"\n                    class=\"mx-2 h-px border-t border-gray-200\"\n                  />\n                </div>\n                <div\n                  v-else\n                  class=\"flex h-20 items-center justify-center text-base text-gray-600\"\n                >\n                  {{ __('No contacts added') }}\n                </div>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    </Resizer>\n  </div>\n  <OrganizationModal\n    v-model=\"showOrganizationModal\"\n    v-model:organization=\"_organization\"\n    :options=\"{\n      redirect: false,\n      afterInsert: (doc) =>\n        updateField('organization', doc.name, () => {\n          organizations.reload()\n        }),\n    }\"\n  />\n  <ContactModal\n    v-model=\"showContactModal\"\n    :contact=\"_contact\"\n    :options=\"{\n      redirect: false,\n      afterInsert: (doc) => addContact(doc.name),\n    }\"\n  />\n  <AssignmentModal\n    v-if=\"showAssignmentModal\"\n    v-model=\"showAssignmentModal\"\n    v-model:assignees=\"deal.data._assignedTo\"\n    :doc=\"deal.data\"\n    doctype=\"CRM Deal\"\n  />\n  <SidePanelModal\n    v-if=\"showSidePanelModal\"\n    v-model=\"showSidePanelModal\"\n    doctype=\"CRM Deal\"\n    @reload=\"() => fieldsLayout.reload()\"\n  />\n</template>\n<script setup>\nimport Icon from '@/components/Icon.vue'\nimport Resizer from '@/components/Resizer.vue'\nimport LoadingIndicator from '@/components/Icons/LoadingIndicator.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport ActivityIcon from '@/components/Icons/ActivityIcon.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport Email2Icon from '@/components/Icons/Email2Icon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport LinkIcon from '@/components/Icons/LinkIcon.vue'\nimport ArrowUpRightIcon from '@/components/Icons/ArrowUpRightIcon.vue'\nimport SuccessIcon from '@/components/Icons/SuccessIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport Activities from '@/components/Activities/Activities.vue'\nimport OrganizationModal from '@/components/Modals/OrganizationModal.vue'\nimport AssignmentModal from '@/components/Modals/AssignmentModal.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport ContactModal from '@/components/Modals/ContactModal.vue'\nimport SidePanelModal from '@/components/Settings/SidePanelModal.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport SLASection from '@/components/SLASection.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport {\n  openWebsite,\n  createToast,\n  setupAssignees,\n  setupCustomActions,\n  setupCustomStatuses,\n  errorMessage,\n  copyToClipboard,\n} from '@/utils'\nimport { getView } from '@/utils/view'\nimport { globalStore } from '@/stores/global'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport { usersStore } from '@/stores/users'\nimport { whatsappEnabled, callEnabled } from '@/composables/settings'\nimport {\n  createResource,\n  Dropdown,\n  Tooltip,\n  Avatar,\n  Tabs,\n  Breadcrumbs,\n  call,\n  usePageMeta,\n} from 'frappe-ui'\nimport { ref, computed, h, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst { $dialog, makeCall } = globalStore()\nconst { organizations, getOrganization } = organizationsStore()\nconst { statusOptions, getDealStatus } = statusesStore()\nconst { isManager } = usersStore()\nconst route = useRoute()\nconst router = useRouter()\n\nconst props = defineProps({\n  dealId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst deal = createResource({\n  url: 'crm.fcrm.doctype.crm_deal.api.get_deal',\n  params: { name: props.dealId },\n  cache: ['deal', props.dealId],\n  onSuccess: (data) => {\n    let obj = {\n      doc: data,\n      $dialog,\n      router,\n      updateField,\n      createToast,\n      deleteDoc: deleteDeal,\n      call,\n    }\n    setupAssignees(data)\n    setupCustomStatuses(data, obj)\n    setupCustomActions(data, obj)\n  },\n})\n\nonMounted(() => {\n  if (deal.data) return\n  deal.fetch()\n})\n\nconst reload = ref(false)\nconst showOrganizationModal = ref(false)\nconst showAssignmentModal = ref(false)\nconst showSidePanelModal = ref(false)\nconst _organization = ref({})\n\nconst organization = computed(() => {\n  return deal.data?.organization && getOrganization(deal.data.organization)\n})\n\nfunction updateDeal(fieldname, value, callback) {\n  value = Array.isArray(fieldname) ? '' : value\n\n  if (validateRequired(fieldname, value)) return\n\n  createResource({\n    url: 'frappe.client.set_value',\n    params: {\n      doctype: 'CRM Deal',\n      name: props.dealId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      deal.reload()\n      reload.value = true\n      createToast({\n        title: __('Deal updated'),\n        icon: 'check',\n        iconClasses: 'text-green-600',\n      })\n      callback?.()\n    },\n    onError: (err) => {\n      createToast({\n        title: __('Error updating deal'),\n        text: __(err.messages?.[0]),\n        icon: 'x',\n        iconClasses: 'text-red-600',\n      })\n    },\n  })\n}\n\nfunction validateRequired(fieldname, value) {\n  let meta = deal.data.fields_meta || {}\n  if (meta[fieldname]?.reqd && !value) {\n    createToast({\n      title: __('Error Updating Deal'),\n      text: __('{0} is a required field', [meta[fieldname].label]),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return true\n  }\n  return false\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Deals'), route: { name: 'Deals' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'CRM Deal')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Deals',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: organization.value?.name || __('Untitled'),\n    route: { name: 'Deal', params: { dealId: deal.data.name } },\n  })\n  return items\n})\n\nusePageMeta(() => {\n  return {\n    title: organization.value?.name || deal.data?.name,\n  }\n})\n\nconst tabIndex = ref(0)\nconst tabs = computed(() => {\n  let tabOptions = [\n    {\n      name: 'Activity',\n      label: __('Activity'),\n      icon: ActivityIcon,\n    },\n    {\n      name: 'Emails',\n      label: __('Emails'),\n      icon: EmailIcon,\n    },\n    {\n      name: 'Comments',\n      label: __('Comments'),\n      icon: CommentIcon,\n    },\n    {\n      name: 'Calls',\n      label: __('Calls'),\n      icon: PhoneIcon,\n      condition: () => callEnabled.value,\n    },\n    {\n      name: 'Tasks',\n      label: __('Tasks'),\n      icon: TaskIcon,\n    },\n    {\n      name: 'Notes',\n      label: __('Notes'),\n      icon: NoteIcon,\n    },\n    {\n      name: 'WhatsApp',\n      label: __('WhatsApp'),\n      icon: WhatsAppIcon,\n      condition: () => whatsappEnabled.value,\n    },\n  ]\n  return tabOptions.filter((tab) => (tab.condition ? tab.condition() : true))\n})\n\nconst fieldsLayout = createResource({\n  url: 'crm.api.doc.get_sidebar_fields',\n  cache: ['fieldsLayout', props.dealId],\n  params: { doctype: 'CRM Deal', name: props.dealId },\n  auto: true,\n  transform: (data) => getParsedFields(data),\n})\n\nfunction getParsedFields(sections) {\n  sections.forEach((section) => {\n    if (section.name == 'contacts_section') return\n    section.fields.forEach((field) => {\n      if (field.name == 'organization') {\n        field.create = (value, close) => {\n          _organization.value.organization_name = value\n          showOrganizationModal.value = true\n          close()\n        }\n        field.link = (org) =>\n          router.push({\n            name: 'Organization',\n            params: { organizationId: org },\n          })\n      }\n    })\n  })\n  return sections\n}\n\nconst showContactModal = ref(false)\nconst _contact = ref({})\n\nfunction contactOptions(contact) {\n  let options = [\n    {\n      label: __('Remove'),\n      icon: 'trash-2',\n      onClick: () => removeContact(contact.name),\n    },\n  ]\n\n  if (!contact.is_primary) {\n    options.push({\n      label: __('Set as Primary Contact'),\n      icon: h(SuccessIcon, { class: 'h-4 w-4' }),\n      onClick: () => setPrimaryContact(contact),\n    })\n  }\n\n  return options\n}\n\nasync function addContact(contact) {\n  let d = await call('crm.fcrm.doctype.crm_deal.crm_deal.add_contact', {\n    deal: props.dealId,\n    contact,\n  })\n  if (d) {\n    deal_contacts.reload()\n    createToast({\n      title: __('Contact added'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function removeContact(contact) {\n  let d = await call('crm.fcrm.doctype.crm_deal.crm_deal.remove_contact', {\n    deal: props.dealId,\n    contact,\n  })\n  if (d) {\n    deal_contacts.reload()\n    createToast({\n      title: __('Contact removed'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function setPrimaryContact(contact) {\n  let d = await call('crm.fcrm.doctype.crm_deal.crm_deal.set_primary_contact', {\n    deal: props.dealId,\n    contact,\n  })\n  if (d) {\n    deal_contacts.reload()\n    createToast({\n      title: __('Primary contact set'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nconst deal_contacts = createResource({\n  url: 'crm.fcrm.doctype.crm_deal.api.get_deal_contacts',\n  params: { name: props.dealId },\n  cache: ['deal_contacts', props.dealId],\n  auto: true,\n  transform: (data) => {\n    data.forEach((contact) => {\n      contact.opened = false\n    })\n    return data\n  },\n})\n\nfunction triggerCall() {\n  let primaryContact = deal_contacts.data?.find((c) => c.is_primary)\n  let mobile_no = primaryContact.mobile_no || null\n\n  if (!primaryContact) {\n    errorMessage(__('No primary contact set'))\n    return\n  }\n\n  if (!mobile_no) {\n    errorMessage(__('No mobile number set'))\n    return\n  }\n\n  makeCall(mobile_no)\n}\n\nfunction updateField(name, value, callback) {\n  updateDeal(name, value, () => {\n    deal.data[name] = value\n    callback?.()\n  })\n}\n\nasync function deleteDeal(name) {\n  await call('frappe.client.delete', {\n    doctype: 'CRM Deal',\n    name,\n  })\n  router.push({ name: 'Deals' })\n}\n\nconst activities = ref(null)\n\nfunction openEmailBox() {\n  activities.value.emailBox.show = true\n}\n</script>\n"],"names":["$dialog","makeCall","globalStore","organizations","getOrganization","organizationsStore","statusOptions","getDealStatus","statusesStore","isManager","usersStore","route","useRoute","router","useRouter","props","__props","deal","createResource","data","obj","updateField","createToast","deleteDeal","call","setupAssignees","setupCustomStatuses","setupCustomActions","onMounted","reload","ref","showOrganizationModal","showAssignmentModal","showSidePanelModal","_organization","organization","computed","_a","updateDeal","fieldname","value","callback","validateRequired","err","meta","breadcrumbs","items","view","getView","usePageMeta","_b","tabIndex","tabs","ActivityIcon","EmailIcon","CommentIcon","PhoneIcon","callEnabled","TaskIcon","NoteIcon","WhatsAppIcon","whatsappEnabled","tab","fieldsLayout","getParsedFields","sections","section","field","close","org","showContactModal","_contact","contactOptions","contact","options","removeContact","h","SuccessIcon","setPrimaryContact","addContact","deal_contacts","triggerCall","primaryContact","c","mobile_no","errorMessage","name","activities","openEmailBox"],"mappings":"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"}